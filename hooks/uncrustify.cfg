#
# minimal uncrustify config file for fw4spl coding style
#

newlines                = lf
input_tab_size          = 4         # original tab size
output_tab_size         = 4         # new tab size

indent_with_tabs        = 0         # 0 = spaces
indent_columns          = output_tab_size
indent_label            = 1         # pos: absolute col, neg: relative column
indent_class            = false
indent_switch_case      = indent_columns
indent_case_shift       = 0
indent_class_colon      = true
indent_access_spec_body = true
indent_constr_colon     = true
indent_namespace        = false
indent_namespace_level  = 0


align_with_tabs         = false     # use tabs to align
align_on_tabstop        = false     # align on tabstops
align_keep_tabs         = true
align_number_left       = true
align_assign_span       = 1
align_enum_equ_span     = 1
code_width              = 120

nl_max                  = 2
nl_class_colon          = ignore
nl_class_brace          = add
nl_class_init_args      = add
nl_do_brace             = add       # "do {" vs "do \n {"
nl_enum_brace           = add       # "enum {" vs "enum \n {"
nl_if_brace             = add       # "if () {" vs "if () \n {"
nl_for_brace            = add       # "for () {" vs "for () \n {"
nl_else_brace           = add       # "else {" vs "else \n {"
nl_while_brace          = add       # "while () {" vs "while () \n {"
nl_switch_brace         = add       # "switch () {" vs "switch () \n {"
nl_brace_while          = add       # "} while" vs "} \n while" - cuddle while
nl_brace_else           = add       # "} else" vs "} \n else" - cuddle else
nl_fdef_brace           = add
nl_try_brace            = add
nl_catch_brace          = add
nl_brace_catch          = add
nl_namespace_brace      = add
nl_cpp_ldef_brace       = add       # Add or remove newline between C++11 lambda signature and '{'
nl_constr_colon         = add       # ignore/add/remove/force
nl_constr_init_args     = add       # Add or remove newline after each ',' in the constructor member initialization
pos_constr_comma        = trail_break

pos_class_comma         = trail_break
pos_class_colon         = trail_break
pos_constr_colon        = trail_break      # The position of colons between constructor and member initialization

mod_full_brace_if       = add       # "if (a) a--;" vs "if (a) { a--; }"
mod_full_brace_for      = add       # "for () a--;" vs "for () { a--; }"
mod_full_brace_do       = add       # "do a--; while ();" vs "do { a--; } while ();"
mod_full_brace_while    = add       # "while (a) a--;" vs "while (a) { a--; }"

sp_enum_assign          = force     # space around assignment '=' in enum
sp_assign               = force     # ignore/add/remove/force
sp_compare              = force

sp_before_byref         = remove
sp_after_byref          = add
sp_before_ptr_star      = remove
sp_after_ptr_star       = add
sp_after_comma          = add
sp_func_call_paren      = remove

cmt_convert_tab_to_spaces = true
cmt_width               = 120        # number
cmt_sp_after_star_cont  = 1
cmt_reflow_mode         = 0

cmt_insert_func_header  = "func_impl_separator.txt"

mod_remove_extra_semicolon = true

nl_cpp_lambda_leave_one_liners=true    #Â allow lamba expressions on a single line

